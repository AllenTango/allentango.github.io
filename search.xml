<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于 Learning Python BASE]]></title>
    <url>%2F2018%2F05%2F04%2FSomething-about-Learning-Python%2F</url>
    <content type="text"><![CDATA[Python 的 打印功能(函数)print(&quot;Hello, World!&quot;) 基础数学运算12345678910&gt;&gt;&gt; 1+12&gt;&gt;&gt; 2*36&gt;&gt;&gt; 4/31.3333333333&gt;&gt;&gt; 3**29&gt;&gt;&gt; 8%32 变量(variable)123456789101112131415a=1print(a)"""1"""apple = "Apple"print(apple)"""Apple"""a,b,c = 1,2,3print(a,b,c)"""1 2 3""" While 循环12while True: doSomething None 则为 False 1234a = rang(5)while a; print(a[-1]) a = a[:len(a)-1] 程序首先判断列表是否为空，(rang() 函数自动生成序列，缩进代表程序结构，a[1:3] 对对象切片，) 如果不为空则打印最后一个数字，然后利用切片方法操作，删掉最后一个元素，并更新列表：重复，知道列表 a 为空 continue &amp; break For 循环12for i in items: expressions 123456789101112131415161718192021items = [1, 2, 3, 4, 5, 6]for i in items: print(i) print("inner of for")print("outer of for")"""1inner of for2inner of for3inner of for4inner of for5inner of for6inner of forouter of for""" 认识迭代器1234567891011121314151617181920212223242526# define a Fib classclass Fib(object): def __init__(self, max): # __init__() 类的构造函数, self 代表类的的实例，必须有 self.max = max self.n, self.a, self.b = 0, 0, 1 def __iter__(self): return self def __next__(self): if self.n &lt; self.max: r = self.b self.a, self.b = self.b, self.a + self.b self.n = self.n + 1 return r raise StopIteration()# using Fib objectfor i in Fib(5): print(i)"""1, 1, 2, 3, 5""" 认识生成器123456789101112131415def fib(max): a, b = 0, 1 while max: r = b a, b = b, a + b max -= 1 yield r# using generatorfor i in fib(5): print(i)"""1, 1, 2, 3, 5""" if 语句123456789101112131415161718if True: doSomething--------if codition: true_expressionselse: false_expressions--------# 三目操作 😢var = var1 if codition else var2--------if condition1: daSomethingelif codition2: doSomething2...else: dofalse_thing def 函数1234567def function(arg): expressions--------# 函数自调用# at the endif __name__ == '__main__': code 模块import name 引用模块，安装模块 pip install name ，一般都会存储在 site-packages 路径当中。 Something To Do I/O 输入与输出 列表、元组、字典——索引 continue &amp; break try 错误处理 zip lambda map copy &amp; deepcopy (浅拷贝与深拷贝) 多线程、多进程 正则表达式]]></content>
  </entry>
  <entry>
    <title><![CDATA[啊哈]]></title>
    <url>%2F2018%2F04%2F28%2FMy-New-Post%2F</url>
    <content type="text"><![CDATA[啊哈 ！— 意识流? — 今天突然奇想，想换了电脑上超级管理员的昵称，扑街咯，重启后昵称没变，权限倒是没有了，想安装些东西都不行，还是看看官方文档啦，重新设置个管理员咯，明天醒来再设置咯， 以前就申请过 GitHub 帐户，不止一个，都没怎么用过，这几天因为觉得电脑的存储不太够，有些东西又怕自己忘了，于是乎重启其中一个帐号B，push时才记起自己之前用过另一个帐号A绑定过电脑，帐号A是不能提交到帐号B的库上的(当时都没意识到 =.= )，然后又是删公钥，又是重新生成公钥，哔哩吧啦 一大堆， 既然重启了 GitHub 帐号，怎能不搭个 blog 呢，，，然后又是看教程 又是看文档，现在有些眉目啦，换了 Next 主题，加了 gitment 评论系统，在 Next 很容易就用上了，都没其中一些教程那么复杂，README.md在提交后被覆盖的问题也解决了(就是放在 source 文件夹里，还需在配置文件里填上属性值skip_render: README.md) 后续，再弄 (貌似累积了不少问题，So What ！ T.T )]]></content>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
